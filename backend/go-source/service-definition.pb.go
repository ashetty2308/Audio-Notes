// Proto file: defines gRPC messages and services
// Sercices = our class/interface for remote procedural calls; we group all related gRPC endpoints here
// Messages = structured data type; used for defining requests/responses

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: service-definition.proto

package go_source

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtractTextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	S3Url         string                 `protobuf:"bytes,1,opt,name=s3_url,json=s3Url,proto3" json:"s3_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractTextRequest) Reset() {
	*x = ExtractTextRequest{}
	mi := &file_service_definition_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractTextRequest) ProtoMessage() {}

func (x *ExtractTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_definition_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractTextRequest.ProtoReflect.Descriptor instead.
func (*ExtractTextRequest) Descriptor() ([]byte, []int) {
	return file_service_definition_proto_rawDescGZIP(), []int{0}
}

func (x *ExtractTextRequest) GetS3Url() string {
	if x != nil {
		return x.S3Url
	}
	return ""
}

type ExtractTextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExtractedText string                 `protobuf:"bytes,1,opt,name=extracted_text,json=extractedText,proto3" json:"extracted_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractTextResponse) Reset() {
	*x = ExtractTextResponse{}
	mi := &file_service_definition_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractTextResponse) ProtoMessage() {}

func (x *ExtractTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_definition_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractTextResponse.ProtoReflect.Descriptor instead.
func (*ExtractTextResponse) Descriptor() ([]byte, []int) {
	return file_service_definition_proto_rawDescGZIP(), []int{1}
}

func (x *ExtractTextResponse) GetExtractedText() string {
	if x != nil {
		return x.ExtractedText
	}
	return ""
}

var File_service_definition_proto protoreflect.FileDescriptor

const file_service_definition_proto_rawDesc = "" +
	"\n" +
	"\x18service-definition.proto\x12\n" +
	"pdfservice\"+\n" +
	"\x12ExtractTextRequest\x12\x15\n" +
	"\x06s3_url\x18\x01 \x01(\tR\x05s3Url\"<\n" +
	"\x13ExtractTextResponse\x12%\n" +
	"\x0eextracted_text\x18\x01 \x01(\tR\rextractedText2g\n" +
	"\x15TextExtractionService\x12N\n" +
	"\vExtractText\x12\x1e.pdfservice.ExtractTextRequest\x1a\x1f.pdfservice.ExtractTextResponseB\x17Z\x15audio-notes/go-sourceb\x06proto3"

var (
	file_service_definition_proto_rawDescOnce sync.Once
	file_service_definition_proto_rawDescData []byte
)

func file_service_definition_proto_rawDescGZIP() []byte {
	file_service_definition_proto_rawDescOnce.Do(func() {
		file_service_definition_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_definition_proto_rawDesc), len(file_service_definition_proto_rawDesc)))
	})
	return file_service_definition_proto_rawDescData
}

var file_service_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_service_definition_proto_goTypes = []any{
	(*ExtractTextRequest)(nil),  // 0: pdfservice.ExtractTextRequest
	(*ExtractTextResponse)(nil), // 1: pdfservice.ExtractTextResponse
}
var file_service_definition_proto_depIdxs = []int32{
	0, // 0: pdfservice.TextExtractionService.ExtractText:input_type -> pdfservice.ExtractTextRequest
	1, // 1: pdfservice.TextExtractionService.ExtractText:output_type -> pdfservice.ExtractTextResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_definition_proto_init() }
func file_service_definition_proto_init() {
	if File_service_definition_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_definition_proto_rawDesc), len(file_service_definition_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_definition_proto_goTypes,
		DependencyIndexes: file_service_definition_proto_depIdxs,
		MessageInfos:      file_service_definition_proto_msgTypes,
	}.Build()
	File_service_definition_proto = out.File
	file_service_definition_proto_goTypes = nil
	file_service_definition_proto_depIdxs = nil
}
